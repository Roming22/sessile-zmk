/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#define NUM 1
#define FUN 2
#define USD 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "28.h"
#include "zmk-helpers/helper.h"
#include <behaviors/num_word.dtsi>
#include "taps.dtsi"
#include "combos.dtsi"

/ {
	keymap {
		compatible = "zmk,keymap";
		caster_layer {
			bindings = <
			&kp B	 &kp F  &kp D      &kp L     &kp P     	 &kp O       &kp U    &kp Y  	
			&kp C  	 &kp S 	&kp T  	   &kp R     &kp N 		 &kp A       &kp I    &kp H
			&kp V	 &kp G 	&kp M      &kp W     &kp DOT     &kp COMMA   &kp SQT  &kp K 		 
							&kp BSPC   &kp SPACE &kp E       &kp RET
			>;
		};
		num_layer {
			bindings = < 
			&kp KP_ENTER    &kp KP_N7      &kp KP_N8      &kp KP_N9          &trans  		 &trans		   &trans 	    &trans
			&hs LCTRL KP_N0 &hs LALT KP_N4 &hs LGUI KP_N5 &hs LSHFT KP_N6   &hs LSHFT LEFT &hs RGUI DOWN &hs RALT UP  &hs RCTRL RIGHT
			&kp KP_DOT      &kp KP_N1      &kp KP_N2      &kp KP_N3          &kp HOME  		 &kp PG_DN     &kp PG_UP    &kp END
										   &rpi DQT SQT   &trans             &kp K_CANCEL    &kp RET 			    
			>;
		};
		fun_layer {
			bindings = <
			&kp F12  &kp F7	 &kp F8	 &kp F9    &kp C_VOL_DN		&kp C_MUTE 	  &kp C_VOL_UP    &none		
			&kp F11  &kp F4  &kp F5  &kp F6    &kp C_PREV   	&kp C_PP 	  &kp C_NEXT 	  &none
			&kp F10	 &kp F1  &kp F2  &kp F3    &trans  			&trans		  &trans 		  &trans
							 &trans  &trans    &trans   		&trans
			>;
		};
		the_upside_down_layer {
			bindings = <
			&kp Y		 &kp U     		&kp O     	     &kp P       		&kp L     	 &kp D  	   &kp F  	   &kp B  	
			&hs LCTRL H  &hs LALT I 	&hs LGUI A  	 &hs LSHFT N        &hs RSHFT R  &hs RGUI T    &hs RALT S  &hs RCTRL C
			&kp K  	     &rpi DQT SQT   &mgc  	 	     &rpi GT DOT 	    &kp W      	 &kp M  	   &kp G 	   &kp V		 		   		 	 
										&kp RET  		 &kp E     			&mqtm NUM SPACE &mqt FUN BSPC           
			>;
		};
	};
};
